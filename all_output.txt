To implement the price bargain chatbot, we will need the following core classes, functions, and methods:

1. Chatbot:
   - `process_message(message: str) -> str`: This method processes the user's message and returns the bot's response.

2. IntentClassifier:
   - `classify_intent(message: str) -> str`: This method uses ChatGPT to classify the user's intent based on their message.

3. DatabaseManager:
   - `save_conversation(conversation: dict) -> None`: This method saves the conversation data in the MySQL database.

Now, let's proceed with creating the necessary files and their content.

**1. chatbot.py**

```python
from intent_classifier import IntentClassifier
from database_manager import DatabaseManager

class Chatbot:
    def __init__(self):
        self.intent_classifier = IntentClassifier()
        self.database_manager = DatabaseManager()

    def process_message(self, message: str) -> str:
        user_intent = self.intent_classifier.classify_intent(message)
        user_offer = self.extract_price(message)

        # Generate response based on conversation history, user offer, and user intent
        response = self.generate_response(user_intent, user_offer)

        # Save conversation data in the database
        conversation = {
            'message': message,
            'intent': user_intent,
            'offer': user_offer,
            'response': response
        }
        self.database_manager.save_conversation(conversation)

        return response

    def extract_price(self, message: str) -> float:
        # Extract the price from the user's message
        # Implement your logic here to extract the price
        pass

    def generate_response(self, user_intent: str, user_offer: float) -> str:
        # Generate response based on conversation history, user offer, and user intent
        # Implement your logic here to generate the response
        pass
```

**2. intent_classifier.py**

```python
from chatgpt import ChatGPT

class IntentClassifier:
    def __init__(self):
        self.chatgpt = ChatGPT()

    def classify_intent(self, message: str) -> str:
        # Use ChatGPT to classify the user's intent based on their message
        user_intent = self.chatgpt.classify_intent(message)
        return user_intent
```

**3. database_manager.py**

```python
import mysql.connector

class DatabaseManager:
    def __init__(self):
        self.connection = mysql.connector.connect(
            host='localhost',
            user='username',
            password='password',
            database='chatbot_db'
        )
        self.cursor = self.connection.cursor()

    def save_conversation(self, conversation: dict) -> None:
        # Save conversation data in the MySQL database
        query = "INSERT INTO conversations (message, intent, offer, response) VALUES (%s, %s, %s, %s)"
        values = (conversation['message'], conversation['intent'], conversation['offer'], conversation['response'])
        self.cursor.execute(query, values)
        self.connection.commit()
```

Please note that the code provided is a basic structure and may require additional implementation based on your specific requirements. Make sure to replace the placeholders with the appropriate logic and configurations.

Next, we need to create the necessary files for the deployment of the chatbot on the website.

**4. app.py**

```python
from flask import Flask, request, jsonify
from chatbot import Chatbot

app = Flask(__name__)
chatbot = Chatbot()

@app.route('/chat', methods=['POST'])
def chat():
    message = request.json['message']
    response = chatbot.process_message(message)
    return jsonify({'response': response})

if __name__ == '__main__':
    app.run()
```

**5. requirements.txt**

```
chatgpt
mysql-connector-python
flask
```

Make sure to install the required packages by running `pip install -r requirements.txt`.

Finally, you need to set up the MySQL database and create the necessary table for storing conversation data.